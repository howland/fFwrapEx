Usefull ifort Compiler flags:

  source: http://geco.mines.edu/guide/ifort.html
       -c
              Prevents linking.
              Architectures: IA-32, Intel速 64 architectures
              Arguments:
              None
              Default:
              OFF               Linking is performed.
              Description:
              This option prevents linking. Compilation stops after the object
              file is generated.
              The compiler generates an object file for  each  Fortran  source
              file.
              Alternate Options:
              Linux and Mac OS X: None
              Windows: /compile-only, /nolink 
       -g  
              No information provided.. 

       -traceback
              No information provided, but info provided below for similar
              notraceback flag.
       -notraceback
              Tells  the  compiler to generate extra information in the object
              file to provide source file traceback information when a  severe
              error occurs at run time.
              Architectures: IA-32, Intel速 64 architectures
              Arguments:
              None
              Default:
              notraceback       No  extra  information  is  generated  in  the
                                object file to produce traceback  information.
              Description:
              This  option tells the compiler to generate extra information in
              the object file to provide  source  file  traceback  information
              when a severe error occurs at run time.
              When  the  severe  error  occurs, source file, routine name, and
              line number correlation information is displayed along with call
              stack hexadecimal addresses (program counter trace).
              Note  that  when  a severe error occurs, advanced users can also
              locate the cause of the error using a map file and the hexadeci-
              mal addresses of the stack displayed when the error occurs.
              This  option  increases  the size of the executable program, but
              has no impact on run-time execution speeds.
              It functions independently of the debug option.
              On Windows* systems,  traceback  sets  the  /Oy-  option,  which
              forces the compiler to use EBP as the stack frame pointer.
              On Windows* systems, the linker places the traceback information
              in the executable image, in a section  named  ".trace".  To  see
              which sections are in an image, use the command:
              link -dump -summary your_app_name.exe
              To see more detailed information, use the command:
              link -dump -headers your_app_name.exe
              On Mac OS* X systems, to display  the  section  headers  in  the
              image, use the command:
              otool -l your_app_name.exe
              Alternate Options:
              None

       -check [keyword]
              No information provided, but -check all referenced in nocheck
              which I have included below.  Here is most applicable reference:
              check all         Enables all check options. This is the same as
                                specifying check with no keyword.

       -nocheck

              Checks for certain conditions at run time.
              Architectures: IA-32, Intel速 64 architectures
              Arguments:
              keyword           Specifies  the  conditions  to check. Possible
                                values are:
                                none           Disables all check options.
                                [no]arg_temp_created
                                               Determines   whether   checking
                                               occurs   for  actual  arguments
                                               before routine calls.
                                [no]bounds     Determines   whether   checking
                                               occurs  for array subscript and
                                               character   substring   expres-
                                               sions.
                                [no]format     Determines   whether   checking
                                               occurs for the data type of  an
                                               item  being  formatted for out-
                                               put.
                                [no]output_conversion
                                               Determines   whether   checking
                                               occurs  for  the  fit  of  data
                                               items within a designated  for-
                                               mat descriptor field.
              nocheck           No  checking  is  performed for run-time fail-
                                ures. Note that if option  vms  is  specified,
                                the  defaults  are check format and check out-
                                put_conversion.
              Description:
              This option checks for certain conditions at run time.
              Option            Description
              check none        Disables all check options (same as  nocheck).
              check arg_temp_created
                                Enables  run-time  checking  on whether actual
                                arguments are copied  into  temporary  storage
                                before  routine  calls.  If  a copy is made at
                                run-time, an informative message is displayed.
              check bounds      Enables compile-time and run-time checking for
                                array  subscript   and   character   substring
                                expressions.  An  error  is  reported  if  the
                                expression is outside  the  dimension  of  the
                                array or the length of the string.
              For  array  bounds,  each  individual dimension is checked.  For
              arrays that are dummy arguments, only the lower bound is checked
              for a dimension whose upper bound is specified as * or where the
              upper and lower bounds are both 1.
              For some intrinsics that specify a DIM=
                                dimension  argument,  such as LBOUND, an error
                                is reported if the specified dimension is out-
                                side  the  declared  rank  of  the array being
                                operated upon.
              Once the program is debugged, omit this option  to  reduce  exe-
              cutable  program size and slightly improve run-time performance.
              check format      Issues the run-time FORVARMIS fatal error when
                                the  data  type of an item being formatted for
                                output does not match  the  format  descriptor
                                being used (for example, a REAL*4 item format-
                                ted with an I edit descriptor).
              With check noformat, the data item is formatted using the speci-
              fied descriptor unless the length of the item cannot accommodate
              the descriptor (for example, it is still an  error  to  pass  an
              INTEGER*2 item to an E edit descriptor).
              check output_conversion
                                Issues  the  run-time  OUTCONERR   continuable
                                called. Only local scalar variables of intrin-
                                sic type INTEGER, REAL, COMPLEX,  and  LOGICAL
                                without the SAVE attribute are checked.
              check all         Enables all check options. This is the same as
                                specifying check with no keyword.
              To get more detailed location information about where  an  error
              occurred, use option traceback.
              Alternate Options:
              check none        Linux and Mac OS X: -nocheck
              check bounds      Linux and Mac OS X: -CB
              check uninit      Linux and Mac OS X: -CU
              check all         Linux and Mac OS X: -check, -C

       -fpe0
              No direct information, but -no-ftz contains reference to it. 
              -no-ftz listed below, reference here:
                 Options -fpe0 and -fpe1 (Linux and Mac OS X) set  -ftz.  Options
                 /fpe:0 and /fpe:1 (Windows) set /Qftz.

       -no-ftz
              Flushes denormal results to zero.
              Architectures: IA-32, Intel速 64 architectures
              Arguments:
              None
              Default:
              -ftz or /Qftz     Denormal results are flushed to zero.

                                Every  optimization option O level, except O0,
                                sets -ftz and /Qftz.
              Options -fpe0 and -fpe1 (Linux and Mac OS X) set  -ftz.  Options
              /fpe:0 and /fpe:1 (Windows) set /Qftz.
              Description:
              This  option  flushes denormal results to zero when the applica-
              tion is in the gradual underflow mode. It  may  improve  perfor-
              mance  if  the denormal values are not critical to your applica-
              tion's behavior.
              This option sets or resets the FTZ and the DAZ  hardware  flags.
              -no-ftz  (Linux  and  Mac OS X) or /Qftz- (Windows) will prevent
              the compiler from inserting any code that might set FTZ or  DAZ.
              This  option  only  has an effect when the main program is being
              compiled. It sets the FTZ/DAZ mode for the process. The  initial
              thread and any threads subsequently created by that process will
              operate in FTZ/DAZ mode.
              If this option produces undesirable  results  of  the  numerical
              behavior  of  your program, you can turn the FTZ/DAZ mode off by
              using -no-ftz or /Qftz- in the command line while still benefit-
              ing from the O3 optimizations.
              NOTE:  Options  -ftz  and /Qftz are performance options. Setting
              these options does not guarantee that all denormals in a program
              are  flushed to zero. They only cause denormals generated at run
              time to be flushed to zero.
              Alternate Options:
              None
